name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # Triggers on new version tags

jobs:
  build:
    runs-on: ubuntu-latest
    container: shivammathur/node:latest-${{ matrix.arch.name }}

    strategy:
      matrix:
        php-version: [8.1]
        arch:
          - { name: "amd64", rust_target: "x86_64-unknown-linux-gnu" }
          - { name: "i386", rust_target: "i686-unknown-linux-gnu" }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: php-config
          extensions: mbstring

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.arch.rust_target }}
      - run: cargo test --all-features


      - name: Install Rust target
        run: rustup target add ${{ matrix.arch.rust_target }}

      - name: Build project
        run: cargo build --release --target ${{ matrix.arch.rust_target }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: libphprocksdb-${{ matrix.php-version }}-${{ matrix.arch.name }}
          path: target/${{ matrix.arch.rust_target }}/release/libphprocksdb.so

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: libphprocksdb-${{ matrix.php-version }}-${{ matrix.arch.name }}
          path: artifacts

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts
          asset_name: libphprocksdb-${{ matrix.php-version }}-${{ matrix.arch.name }}.so
          asset_content_type: application/octet-stream
