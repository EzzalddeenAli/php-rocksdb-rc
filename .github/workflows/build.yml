---
name: Build and Lint
on: [push, pull_request]

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        # os: [windows-2019, macos-latest, ]
        # phpts: [ts, nts]
        phpts: [nts, ts]
        rust: [stable]
        php: ["8.1"]
        exclude:
          # setup-php doesn't support thread safe PHP on Linux and macOS.
          - os: macos-latest
            phpts: ts
          - os: ubuntu-22.04
            phpts: ts
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
        env:
          phpts: ${{ matrix.phpts }}
          debug: true
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - run: rustup show
      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2
        # Uncomment the following if statement if caching nightly deps
        # ends up causing too much cache invalidation.
        # if: matrix.rust == 'stable'
        with:
          # increment this manually to force cache eviction
          prefix-key: "v0-rust"
      # Build
      - name: Build
        env:
          EXT_PHP_RS_TEST: ""
        run: cargo build --release
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ matrix.os }}-${{ matrix.php }}-${{ matrix.phpts }}
          path: |
            target/release/php_rocksdb_rc.dll
            target/release/libphp_rocksdb_rc.dylib
            target/release/libphp_rocksdb_rc.so
      # Test & lint
      # - name: Test inline examples
      #   run: cargo test --release --all --all-features
      # - name: Run rustfmt
      #   if: matrix.rust == 'stable' && matrix.os == 'ubuntu-20.04' && matrix.php == '8.2'
      #   run: cargo fmt --all -- --check
      # - name: Run clippy
      #   if: matrix.rust == 'stable' && matrix.os == 'ubuntu-20.04' && matrix.php == '8.2'
      #   run: cargo clippy --all -- -D warnings